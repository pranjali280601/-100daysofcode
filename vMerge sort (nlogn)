void merge(int a[], int l,int mid,int r){
    
    int n=mid-l+1;
    int m=r-mid;
    int x[n],y[m];
    for(int i=0;i<n;i++)
    x[i]=a[l+i];
    for(int i=0;i<m;i++)
    y[i]=a[mid+1+i];
    
    int i=0,j=0,k=l;
    while(i<n && j<m){
        while(i<n && x[i]<y[j]){
            a[k]=x[i];
            i++;k++;
        }
        while(j<m && y[j]<x[i]){
            a[k]=y[j];
            j++;
            k++;
        }
    }
    
    while(i<n){
        a[k]=x[i];
        i++;k++;
    }
    while(j<m){
        a[k]=y[j];
        j++;k++;
    }
    
}
void mergesort(int a[],int l,int r){
    if(l<r){
        int mid=(l+r)/2;
        mergesort(a,l,mid);
        mergesort(a,mid+1,r);
        merge(a,l,mid,r);
    }
}
int main()
{
    int n=5;
    int a[]={9,4,3,5,1};
    mergesort(a,0,n-1);
    for(int i=0;i<n;i++)
    cout<<a[i]<<" ";
    
  return 0;
}
