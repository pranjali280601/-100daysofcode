/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode*l3=new ListNode();
        ListNode*cur=l3;
        int carry=0;
       
        while(l1!=NULL && l2!=NULL){
            int dig=l1->val+l2->val;
             
            ListNode *newNode=new ListNode((dig+carry)%10);
            carry=(dig+carry)/10;
            cur->next=newNode;
            cur=cur->next;
            l1=l1->next;
            l2=l2->next;
        }
              
        while(l1!=NULL){
            int dig=l1->val;
            ListNode *newNode=new ListNode((dig+carry)%10);
            carry=(dig+carry)/10;
            cur->next=newNode;
            cur=cur->next;
            l1=l1->next;
        }
         while(l2!=NULL){
            int dig=l2->val;
            ListNode *newNode=new ListNode((dig+carry)%10);
            carry=(dig+carry)/10;
            cur->next=newNode;
             cur=cur->next;
            l2=l2->next;
        }
        if(carry>0)
        {
            ListNode *newNode=new ListNode(carry);
            cur->next=newNode;
        }
        
        return l3->next;
    }
};
