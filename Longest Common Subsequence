// { Driver Code Starts
#include<bits/stdc++.h>
const int mod=1e9+7;
using namespace std;

 // } Driver Code Ends
// function to find longest common subsequence

class Solution{
    public:
        int lcs(int x, int y, string s1, string s2){
        
        // your code here
        int mat[x+1][y+1];
        int i,j,ans=0;
        for(i=0;i<=x;i++){
            for(j=0;j<=y;j++){
                if(i==0 || j==0)
                mat[i][j]=0;
                else if(s1[i-1]==s2[j-1])
                mat[i][j]=1+mat[i-1][j-1];
                else
                mat[i][j]=max(mat[i-1][j],mat[i][j-1]);
            }
        }
       
        return mat[x][y];
    }
};


// { Driver Code Starts.
int main()
{
    int t,n,k,x,y;
    cin>>t;
    while(t--)
    {
        cin>>x>>y;          // Take size of both the strings as input
        string s1,s2;
        cin>>s1>>s2;        // Take both the string as input
        Solution ob;
        cout << ob.lcs(x, y, s1, s2) << endl;
    }
    return 0;
}
  // } Driver Code Ends
